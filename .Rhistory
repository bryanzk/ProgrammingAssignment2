source('~/dev/r/ProgrammingAssignment2/cachematrix.R')
x <-matrix(rnorm(20), rif(10))
x <-matrix(rnorm(20), rnorm(10))
x <-matrix(rnorm(20), rnorm(20))
x <-matrix(rnorm(20), rnorm(20))
?matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3"))
mdat
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
makeCacheMatrix(mdat)
cacheSolve(m)
cacheSolve(mdat)
d = makeCacheMatrix(mdat)
d
d$get()
cacheSolve(d)
mm <- matrix(c(1,2,3), c(4,5,6), c(7,8,9))
mm <- matrix(c[1,2,3], c[4,5,6], c[7,8,9])
b = matrix( c(1,2,3,4), nrow=2, ncol=2)
c = makeInverse(b)
c = makeCacheMatrix(b)
b$get
c$get
c$get()
d = cacheSolve(c)
debugSource('~/dev/r/ProgrammingAssignment2/cachematrix.R')
}
d = cacheSolve(c)
c$getInverse()
c$getInverse
debugSource('~/dev/r/ProgrammingAssignment2/cachematrix.R')
c$getInverse()
d = cacheSolve(c)
d
c$getInverse()
d = cacheSolve(c)
c$getInverse()
c$getInverse
d = cacheSolve(c)
debugSource('~/dev/r/ProgrammingAssignment2/cachematrix.R')
debugSource('~/dev/r/ProgrammingAssignment2/cachematrix.R')
